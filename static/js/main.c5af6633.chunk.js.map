{"version":3,"sources":["redux/actionTypes.js","redux/reducers/feedback.js","redux/reducers/myPokemons.js","redux/reducers/pokemons.js","redux/reducers/index.js","redux/store.js","redux/actionsFeedback.js","formatter.js","components/Feedback/index.js","static/ImageNotAvailable.png","pages/MyPokemons/index.js","redux/actionsMyPokemons.js","api/Pokemon.js","redux/actionsPokemons.js","pages/Pokemon/index.js","components/Card/index.js","components/Filter/index.js","components/Pagination/index.js","pages/Pokemons/index.js","pages/PageNotFound/index.js","logo.svg","App.js","reportWebVitals.js","index.js"],"names":["FEEDBACK_ERROR","FEEDBACK_INFO","FEEDBACK_SUCCESS","FEEDBACK_WARNING","MY_POKEMONS_ADD","MY_POKEMONS_REMOVE","POKEMONS_GET","POKEMONS_GET_DETAILS","POKEMONS_LOADING","initialState","message","feedback","action","type","payload","myPokemons","myPokemonsIndex","shallowClone","object","Object","assign","state","pokemon","pokemonId","id","newState","length","actionStatus","text","index","splice","item","i","focusOn","items","itemsPerPage","page","status","pokemons","combineReducers","savedState","localStorage","getItem","JSON","parse","exception","getState","myPokemonsInitialState","pokemonsInitialState","store","createStore","rootReducer","applyMiddleware","thunk","subscribe","setItem","stringify","success","actionPerformed","dispatch","formatFeedback","pokemonName","formatName","formatId","String","padStart","name","charAt","toUpperCase","slice","Feedback","props","isActive","handleClose","bind","prevProps","prevState","snapshot","prevMessage","this","setState","className","classNameText","push","join","onClick","title","React","Component","MyPokemons","handleRemove","handleShowDetails","handleImageNotFound","event","target","setAttribute","notAvailable","handleMyPokemonsRemove","history","feedbackMessage","data","map","idx","image","imageAlt","alt","height","onError","src","width","connect","remove","withRouter","API_END_POINTS","API_BASE_URL","API_FETCH_INITS","mode","headers","body","pokemonApi","params","cache","init","_getPage","dataCount","filter","input","filterParams","filtered","filteredCount","key","dataIndexes","byName","sortBy","test","byId","results","RegExp","sort","objectA","objectB","_sortObjectsBy","result","requestDetails","abilities","forEach","fetch","ability","url","then","json","Promise","all","names","_getLang","_getBy","moves","move","catch","error","console","language","stats","stat","base","base_stat","effort","a","b","uri","limitInfo","limitInfoData","limit","count","allPokemons","allPokemonsData","pokemonsList","details","detailsCount","detailsIndexes","pattern","Number","exec","pokemonImage","pokemonIdOrName","pokemonRequest","getAbilities","getMoves","getStats","pokemonDetails","sprites","front_default","end","start","property","isDescending","valueA","valueB","loading","Pokemon","match","handleGetPokemon","getByName","fetchPokemon","Card","handleAdd","handleClick","stopPropagation","Filter","htmlFor","onChange","handleSearch","placeholder","Pagination","total","pages","Math","ceil","isClickable","isSelected","label","offsetStart","offsetEnd","prepareItems","createMarkup","__html","dangerouslySetInnerHTML","handleGoTo","Pokemons","handleFilter","componentNode","createRef","handleGetPokemons","location","pathname","handleMyPokemonsAdd","value","trim","current","parentNode","scrollTop","ref","get","getPokemons","add","PageNotFound","App","logo","activeClassName","to","component","exact","path","strict","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2WAAaA,EAAiB,iBACjBC,EAAgB,gBAChBC,EAAmB,mBACnBC,EAAmB,mBAEnBC,EAAkB,kBAClBC,EAAqB,qBAErBC,EAAe,eACfC,EAAuB,uBACvBC,EAAmB,mBCHnBC,EAAe,CACxBC,QAAS,MA2CEC,EAxCE,WAAmC,IAAZC,EAAW,uCAC/C,OAAQA,EAAOC,MACX,KAAKb,EACD,MAAO,CACHU,QAAS,CACLI,QAASF,EAAOE,QAChBD,KAAM,UAIlB,KAAKZ,EACD,MAAO,CACHS,QAAS,CACLI,QAASF,EAAOE,QAChBD,KAAM,SAIlB,KAAKX,EACD,MAAO,CACHQ,QAAS,CACLI,QAASF,EAAOE,QAChBD,KAAM,YAIlB,KAAKV,EACD,MAAO,CACHO,QAAS,CACLI,QAASF,EAAOE,QAChBD,KAAM,YAIlB,QACI,OAAOJ,I,QCzCNA,EAAe,CACxBM,WAAY,GACZC,gBAAiB,IAGfC,EAAe,SAACC,GAKlB,OAAOC,OAAOC,OAAO,GAAIF,IA+DdH,EA5DI,WAAmC,IAAlCM,EAAiC,uDAAzBZ,EAAcG,EAAW,uCACjD,OAAQA,EAAOC,MACX,KAAKT,EACD,IAAMkB,EAAUV,EAAOE,QAAQQ,QACzBC,EAAYD,EAAQE,GAG1B,GAAwC,MAApCH,EAAML,gBAAgBO,GAAoB,CAC1C,IAAME,EAAW,CACbV,WAAW,GAAD,mBAAMM,EAAMN,YAAZ,CAAwBO,IAClCN,gBAAiBC,EAAaI,EAAML,kBAKxC,OAHAS,EAAST,gBAAgBO,GACrBE,EAASV,WAAWW,OAAS,EAE1BD,EAGX,IAAMA,EAAWR,EAAaI,GAM9B,OALAI,EAASE,aAAe,CACpBC,KAAM,iBACNf,KAAM,QAGHY,EAEX,KAAKpB,EACD,IAAMiB,EAAUV,EAAOE,QAAQQ,QACzBC,EAAYD,EAAQE,GACpBK,EAAQR,EAAML,gBAAgBO,GAEhCR,EAAU,YAAOM,EAAMN,YAC3BA,EAAWe,OAAOD,EAAO,GAEzB,IAAMJ,EAAW,CACbV,WAAYA,EACZC,gBAAiBC,EAAaI,EAAML,kBAGxCS,EAAST,gBAAgBO,GAAa,KAItC,IADA,IAAIQ,EAAO,KAEHC,EAAI,EAAGN,EAASD,EAASV,WAAWW,OACxCM,EAAIN,EACJM,IAEAD,EAAON,EAASV,WAAWiB,GAC3BP,EAAST,gBAAgBe,EAAKP,IAAMQ,EAGxC,OAAOP,EAEX,QACI,OAAOJ,ICnENZ,EAAe,CACxBwB,QAAS,KACTC,MAAO,KACPC,aAAc,GACdC,KAAM,EACNC,OAAQ,WAGNpB,EAAe,SAACC,GAKlB,OAAOC,OAAOC,OAAO,GAAIF,IAsCdoB,EAnCE,WAAmC,IAAlCjB,EAAiC,uDAAzBZ,EAAcG,EAAW,uCAC/C,OAAQA,EAAOC,MACX,KAAKL,EACD,IAAMiB,EAAWR,EAAaI,GAK9B,OAHAI,EAASQ,QAAU,KACnBR,EAASY,OAASzB,EAAOE,QAAQuB,OAE1BZ,EAEX,KAAKnB,EACD,IAAMmB,EAAWR,EAAaI,GAQ9B,OANAI,EAASQ,QAAU,KACnBR,EAASS,MAAQtB,EAAOE,QAAQoB,MAChCT,EAASU,aAAevB,EAAOE,QAAQqB,aACvCV,EAASW,KAAOxB,EAAOE,QAAQsB,KAC/BX,EAASY,OAASzB,EAAOE,QAAQuB,OAE1BZ,EAEX,KAAKlB,EACD,IAAMkB,EAAWR,EAAaI,GAK9B,OAHAI,EAASQ,QAAUrB,EAAOE,QAAQmB,QAClCR,EAASY,OAASzB,EAAOE,QAAQuB,OAE1BZ,EAEX,QACI,OAAOJ,IC/CJkB,cAAgB,CAAE5B,WAAUI,aAAYuB,a,QC4BjDE,EAdW,WACb,IACI,IAAMnB,EAAQoB,aAAaC,QAAQ,SAEnC,OAAa,MAATrB,EACO,KAGJsB,KAAKC,MAAMvB,GACpB,MAAOwB,GACL,OAAO,MAIIC,GAEbrC,EAAe,CACjBM,WAA0B,MAAdyB,EAAqBO,EAAyBP,EAC1DF,SAAUU,GAGRC,EAAQC,YAAYC,EAAa1C,EAAc2C,YAAgBC,MAErEJ,EAAMK,WAAU,WA7BE,IAACjC,KA8BL,CACNN,WAAYkC,EAAMH,WAAW/B,aA9BvBA,WAAWA,WAAWW,OAAS,GACrCe,aAAac,QAAQ,QAASZ,KAAKa,UAAUnC,EAAMN,gBAiC5CkC,Q,kDCjBFQ,EAAU,SAACC,EAAiB3B,GACrC,OAAO,SAAC4B,GACJA,EAAS,CACL7C,QAAS,CACL4C,kBACA3B,QAEJlB,KAAMX,MCtCL0D,EAAiB,SAACjD,GAC3B,GAAgB,MAAZA,EACA,OAAO,KAGX,IAAMkD,EAAcC,EAAWnD,EAASG,QAAQiB,MAC5CH,EAAO,KACX,OAAQjB,EAASG,QAAQ4C,iBACrB,IAAK,MACD9B,EAAI,UAAMiC,EAAN,0BAEJ,MAEJ,IAAK,SACDjC,EAAI,UAAMiC,EAAN,8BAEJ,MAEJ,QACIjC,EAAO,GASf,MALgB,CACZA,KAAMA,EACNf,KAAMF,EAASE,OAMVkD,EAAW,SAAChC,GAGrB,OAFWiC,OAAOjC,EAAKP,IAEbyC,SAAS,EAAG,MAGbH,EAAa,SAAC/B,GACvB,IAAMmC,EAAOnC,EAAKmC,KAGlB,OAAOA,EAAKC,OAAO,GAAGC,cAAgBF,EAAKG,MAAM,IC6CtCC,G,wDAjFX,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IAEDlD,MAAQ,CACTmD,UAAU,GAGd,EAAKC,YAAc,EAAKA,YAAYC,KAAjB,gBAPJ,E,+DAUAC,EAAWC,EAAWC,GACrC,IAAMC,EACmB,MAArBH,EAAUjE,QAAkB,KAAOiE,EAAUjE,QAAQkB,MAE/B,MAAtBmD,KAAKR,MAAM7D,QAAkB,KAAOqE,KAAKR,MAAM7D,QAAQkB,QAExCkD,GACfC,KAAKC,UAAS,SAAC3D,EAAOkD,GAClB,MAAO,CACHC,UAAU,Q,oCAOtBO,KAAKC,UAAS,SAAC3D,EAAOkD,GAClB,MAAO,CACHC,UAAU,Q,+BAMlB,IAAM9D,EAAUqE,KAAKR,MAAM7D,QAE3B,GAAe,MAAXA,IAA2C,IAAxBqE,KAAK1D,MAAMmD,SAC9B,OAAO,qBAAKS,UAAU,gCAG1B,IAAIC,EAAgB,CAAC,iBAErB,OAAQxE,EAAQG,MACZ,IAAK,QACDqE,EAAcC,KAAK,wBAEnB,MAEJ,IAAK,UACDD,EAAcC,KAAK,0BAEnB,MAEJ,IAAK,UACDD,EAAcC,KAAK,0BAEnB,MAEJ,IAAK,OACL,QACID,EAAcC,KAAK,uBAI3B,OACI,qBAAKF,UAAU,WAAf,SACI,qBAAIA,UAAWC,EAAcE,KAAK,KAAlC,UACK1E,EAAQkB,KAAM,IACf,wBACIqD,UAAU,wBACVI,QAASN,KAAKN,YACda,MAAM,eAHV,wB,GArEGC,IAAMC,YCJd,G,MAAA,IAA0B,+CCcnCC,E,kDACF,WAAYlB,GAAQ,IAAD,8BACf,cAAMA,IAEDmB,aAAe,EAAKA,aAAahB,KAAlB,gBACpB,EAAKiB,kBAAoB,EAAKA,kBAAkBjB,KAAvB,gBACzB,EAAKkB,oBAAsB,EAAKA,oBAAoBlB,KAAzB,gBALZ,E,gEAQC3C,EAAM8D,GACtB,IAAMC,EAASD,EAAMC,OACrBA,EAAOC,aACH,MACA,2BAA6BjC,EAAW/B,IAE5C+D,EAAOC,aAAa,MAAOC,K,mCAGlB1E,GACTyD,KAAKR,MAAM0B,uBAAuB3E,K,wCAGpBA,GACd,IAAMuC,EAAcvC,EAAQ4C,KAC5Ba,KAAKR,MAAM2B,QAAQf,KAAnB,uBAAwCtB,EAAxC,Q,+BAGM,IAAD,OACCsC,EAAkBvC,EACpBmB,KAAKR,MAAM6B,KAAKzF,SAASD,SAEvB4B,EAAWyC,KAAKR,MAAM6B,KAAKrF,WAAWA,WAE5C,OAAwB,IAApBuB,EAASZ,OAEL,sBAAKuD,UAAU,aAAf,UACI,cAAC,EAAD,CAAUvE,QAASyF,IACnB,8DAMR,sBAAKlB,UAAU,aAAf,UACI,cAAC,EAAD,CAAUvE,QAASyF,IACnB,kCACI,gCACI,+BACI,uBACA,sCACA,oCACA,4BAGR,gCACK7D,EAAS+D,KAAI,SAACtE,EAAMuE,GACjB,IAAM9E,EAAKuC,EAAShC,GACdmC,EAAOJ,EAAW/B,GAClBwE,EAAQxE,EAAKwE,MACbC,EAAW,eAAiBtC,EAElC,OACI,+BACI,6BACI,qBACIuC,IAAKD,EACLE,OAAO,KACPC,QAAS,SAACd,GACN,EAAKD,oBACD7D,EACA8D,IAGRe,IAAKL,EACLM,MAAM,SAGd,6BAAK3C,IACL,6BAAK1C,IACL,+BACI,wBACIyD,UAAU,sCACVI,QAAS,WACL,EAAKK,aAAa3D,IAH1B,oBAQA,wBACIkD,UAAU,oCACVI,QAAS,WACL,EAAKM,kBAAkB5D,IAH/B,uBA1BC,aAAeuE,kB,GA9D/Bf,IAAMC,WAuHhBsB,eAJS,SAACzF,GACrB,MAAO,CAAE+E,KAAM/E,MATQ,SAACsC,GACxB,MAAO,CACHsC,uBAAwB,SAAC3E,GACrBqC,EC3GU,SAACrC,GACnB,OAAO,SAACqC,GACJA,EAAS,CACL9C,KAAMR,EACNS,QAAS,CACLQ,aAIRqC,EAASF,EAAQ,SAAUnC,KDkGdyF,CAAOzF,QASbwF,CAGbE,YAAWvB,I,wBE/HPwB,EACGC,qCADHD,EAGE,4EAEFE,GACG,CACDC,KAAM,OACNC,QAAS,CACL,eAAgB,oBAEpBC,KAAM,MCZRC,GAAa,I,qID+BLC,G,6FAEO,OADTC,EAAQ1C,KAAK0C,O,gCAEC1C,KAAK2C,O,OAAnBD,E,iBAGU,MAAVD,E,yCACOzC,KAAK4C,SAASF,EAAMrB,KAAMqB,EAAMG,UAAW,CAC9CzF,aAAc,GACdC,KAAM,K,UAIO,MAAjBoF,EAAOK,QAA0C,KAAxBL,EAAOK,OAAOC,M,yCAChC/C,KAAK4C,SAASF,EAAMrB,KAAMqB,EAAMG,UAAWJ,I,UAI5B,MAAtBC,EAAMM,cACNP,EAAOK,OAAOC,QAAUL,EAAMM,aAAaD,M,0CAEpC/C,KAAK4C,SAASF,EAAMO,SAAUP,EAAMQ,cAAeT,I,QAY9D,IAASU,KATLrG,EAAQ4F,EAAMU,YAAYC,OAC1BC,EAAS,OACT,aAAaC,KAAKd,EAAOK,OAAOC,SAChCjG,EAAQ4F,EAAMU,YAAYI,KAC1BF,EAAS,MAGPnG,EAAQuF,EAAMrB,KAChBoC,EAAU,GACE3G,GAEY,IADZ,IAAI4G,OAAO,IAAMjB,EAAOK,OAAOC,MAAO,MACxCQ,KAAKJ,IACXM,EAAQrD,KAAKjD,EAAML,EAAMqG,K,OAIjCM,EAAQE,MAAK,SAACC,EAASC,GACnB,OAAO,EAAKC,eAAeF,EAASC,EAASP,GAAQ,MAGzDZ,EAAMM,aAAeP,EACrBC,EAAMO,SAAWQ,EACjBf,EAAMQ,cAAgBO,EAAQ9G,OAExBoH,EAAS/D,KAAK4C,SAChBF,EAAMO,SACNP,EAAMQ,cACNT,G,kBAGGsB,G,oLAUQxH,G,uFACXoG,EAAOvG,OAAOC,OAAO,GAAI+F,IAEzB4B,EAAiB,GACrBzH,EAAQ0H,UAAUC,SAAQ,SAAClH,GACvBgH,EAAe5D,KACX+D,MAAMnH,EAAKoH,QAAQC,IAAK1B,GAAM2B,MAAK,SAACF,GAChC,OAAOA,EAAQG,c,kBAKpBC,QAAQC,IAAIT,GAAgBM,MAAK,SAACnH,GACrC,IAAI4G,EAAS,GAMb,OAJA5G,EAAM+G,SAAQ,SAAClH,GACX+G,EAAO3D,KAAKpD,EAAK0H,MAAM5B,OAAO,EAAK6B,UAAU,GAAGxF,SAG7C4E,EAAOJ,W,yKAWRnH,G,0FACHwD,KAAK4E,OAAOpI,I,gLAUPsC,G,0FACLkB,KAAK4E,OAAO9F,I,+KAURvC,G,uFACPoG,EAAOvG,OAAOC,OAAO,GAAI+F,IAEzB4B,EAAiB,GACrBzH,EAAQsI,MAAMX,SAAQ,SAAClH,GACnBgH,EAAe5D,KACX+D,MAAMnH,EAAK8H,KAAKT,IAAK1B,GAChB2B,MAAK,SAACQ,GACH,OAAOA,EAAKP,UAEfQ,OAAM,SAACC,GAmBJ,OAlBAC,QAAQD,MACJ,sDACAA,GAGgB,CAChBN,MAAO,CACH,CACIQ,SAAU,CACN/F,KAtJvB,MAwJmBA,KACInC,EAAK8H,KAAK3F,KACV,mC,kBAUzBqF,QAAQC,IAAIT,GAAgBM,MAAK,SAACnH,GACrC,IAAI4G,EAAS,GAMb,OAJA5G,EAAM+G,SAAQ,SAAClH,GACX+G,EAAO3D,KAAKpD,EAAK0H,MAAM5B,OAAO,EAAK6B,UAAU,GAAGxF,SAG7C4E,EAAOJ,W,0KAWPpH,G,uFACPoG,EAAOvG,OAAOC,OAAO,GAAI+F,IAEzB4B,EAAiB,GACrBzH,EAAQ4I,MAAMjB,SAAQ,SAAClH,GACnBgH,EAAe5D,KACX+D,MAAMnH,EAAKoI,KAAKf,IAAK1B,GAAM2B,MAAK,SAACc,GAC7B,OAAOA,EAAKb,c,kBAKjBC,QAAQC,IAAIT,GAAgBM,MAAK,SAACnH,GACrC,IAAI4G,EAAS,GAUb,OARA5G,EAAM+G,SAAQ,SAAClH,EAAMF,GACjBiH,EAAO3D,KAAK,CACRiF,KAAM9I,EAAQ4I,MAAMrI,GAAOwI,UAC3BC,OAAQhJ,EAAQ4I,MAAMrI,GAAOyI,OAC7BpG,KAAMnC,EAAK0H,MAAM5B,OAAO,EAAK6B,UAAU,GAAGxF,UAI3C4E,EAAOJ,MAAK,SAAC6B,EAAGC,GACnB,OAAID,EAAErG,KAAOsG,EAAEtG,KACJ,EAGPqG,EAAErG,KAAOsG,EAAEtG,MACH,EAGL,S,2QAgBXwD,EAAOvG,OAAOC,OAAO,GAAI+F,IACzBsD,EAAMxD,EAAqB,oB,SAEPiC,MAAMuB,EAAK/C,G,cAA7BgD,E,gBACsBA,EAAUpB,O,cAAhCqB,E,OAEAC,EAAQD,EAAcE,MAC5BJ,EAAMxD,EAAA,iBAA+B2D,EAA/B,a,UAEoB1B,MAAMuB,EAAK/C,G,eAA/BoD,E,iBACwBA,EAAYxB,O,eAApCyB,E,OACAC,EAAeD,EAAgBvC,QAErCzD,KAAK0C,MAAQ,CACTrB,KAAM,GACNwB,UAAWgD,EACXzC,YAAa,CACTI,KAAM,GACNH,OAAQ,IAGZ6C,QAAS,GACTC,aAAc,EACdC,eAAgB,CACZ5C,KAAM,GACNH,OAAQ,IAGZL,aAAc,KACdC,SAAU,GACVC,cAAe,GAGnB+C,EAAa/B,SAAQ,SAAClH,EAAMF,GACxB,IAAMuJ,EAAU,IAAI3C,OAAOxB,EAAqB,UAAW,MAErD1F,EAAY8J,OAAOD,EAAQE,KAAKvJ,EAAKqH,KAAK,IAC1CmC,EAAetE,EAAA,UAA0B1F,EAA1B,QAErB,EAAKkG,MAAMrB,KAAKjB,KAAK,CACjB3D,GAAID,EACJgF,MAAOgF,EACPrH,KAAMnC,EAAKmC,OAGf,EAAKuD,MAAMU,YAAYI,KAAKhH,GAAaM,EACzC,EAAK4F,MAAMU,YAAYC,OAAOrG,EAAKmC,MAAQrC,K,kBAGxCkD,KAAK0C,O,6KASH+D,G,0FAEI,OADT/D,EAAQ1C,KAAK0C,O,gCAEC1C,KAAK2C,O,OAAnBD,E,kBAGA,aAAaa,KAAKkD,G,sBACdA,KAAmB/D,EAAM0D,eAAe5C,M,yCACjCd,EAAMwD,QACTxD,EAAM0D,eAAe5C,KAAKiD,K,oCAI9BA,KAAmB/D,EAAM0D,eAAe/C,Q,0CACjCX,EAAMwD,QACTxD,EAAM0D,eAAe/C,OAAOoD,K,eAKpC9D,EAAOvG,OAAOC,OAAO,GAAI+F,IACvBsD,EAAMxD,EAAA,UAAwBuE,EAAxB,K,UAEiBtC,MAAMuB,EAAK/C,G,eAAlC+D,E,iBACgBA,EAAenC,O,eAA/BhI,E,OAEFyH,EAAiB,CACjBhE,KAAK2G,aAAapK,GAClByD,KAAK4G,SAASrK,GACdyD,KAAK6G,SAAStK,I,UAEWiI,QAAQC,IAAIT,G,eAAnC8C,E,OAEA/C,EAAS,CACXE,UAAW6C,EAAe,GAC1BrK,GAAIF,EAAQE,GACZ+E,MAAOjF,EAAQwK,QAAQC,cACvBnC,MAAOiC,EAAe,GACtB3H,KAAM5C,EAAQ4C,KACdgG,MAAO2B,EAAe,IAI1B9G,KAAK0C,MAAMwD,QAAQ9F,KAAK2D,GAClBjH,EAAQkD,KAAK0C,MAAMwD,QAAQvJ,OAAS,EAC1CqD,KAAK0C,MAAM0D,eAAe5C,KAAKjH,EAAQE,IAAMK,EAC7CkD,KAAK0C,MAAM0D,eAAe/C,OAAO9G,EAAQ4C,MAAQrC,E,kBAE1CiH,G,uIAIF/G,GACL,MArVS,OAqVLA,EAAKkI,SAAS/F,O,+BAQbkC,EAAMwB,EAAWJ,GACtB,IAAIwE,EAAM,GACNC,EAAQ,EAWZ,OAVc,MAAVzE,IACAwE,EAAMxE,EAAOrF,aAAeqF,EAAOpF,KACnC6J,GAASzE,EAAOpF,KAAO,GAAKoF,EAAOrF,cAGxB,CACXiE,KAAMA,EAAK/B,MAAM4H,EAAOD,GACxBpE,UAAWA,K,qCAOJe,EAASC,EAASsD,EAAUC,GACvCA,EAA+B,MAAhBA,GAA+BA,EAE9C,IAAMC,EAASzD,EAAQuD,GACjBG,EAASzD,EAAQsD,GAEvB,OAAIE,EAASC,GACe,IAAjBF,GAAyB,EAAI,EAGpCC,EAASC,GACe,IAAjBF,EAAwB,GAAK,EAGjC,M,MCzWFG,GAAU,WACnB,OAAO,SAAC3I,GACJA,EAAS,CACL9C,KAAML,EACNM,QAAS,CACLuB,OAAQ,eCvClBkK,I,wLAEE,IAAM1I,EAAckB,KAAKR,MAAMiI,MAAMhF,OAAOtD,KAC5Ca,KAAKR,MAAMkI,iBAAiB5I,K,+BAI5B,IAAMuC,EAAOrB,KAAKR,MAAM6B,KAExB,GAAoB,YAAhBA,EAAK/D,QAAwC,MAAhB+D,EAAKnE,QAClC,OACI,qBAAKgD,UAAU,UAAf,SACI,gEAKZ,IAAM3D,EAAU8E,EAAKnE,QACfiC,EAAOJ,EAAWxC,GACpBiF,EAAQP,EACRQ,EAAW,2BAA6BtC,EAM5C,OALqB,MAAjB5C,EAAQiF,QACRA,EAAQjF,EAAQiF,MAChBC,EAAW,eAAiBtC,GAI5B,sBAAKe,UAAU,UAAf,UACI,oBAAIA,UAAU,eAAd,SAA8Bf,IAC9B,oBAAGe,UAAU,aAAb,iBAA+BlB,EAASzC,MACxC,sBAAK2D,UAAU,kBAAf,UACI,sBAAKA,UAAU,eAAf,UACI,2CACA,oBAAIA,UAAU,oBAAd,SACK3D,EAAQ0H,UAAU3C,KAAI,SAACtE,EAAMuE,GAC1B,OACI,oBACIrB,UAAU,kBADd,SAIKlD,GAFI,WAAauE,QAQlC,uCACA,oBAAIrB,UAAU,gBAAd,SACK3D,EAAQsI,MAAMvD,KAAI,SAACtE,EAAMuE,GACtB,OACI,oBACIrB,UAAU,eADd,SAIKlD,GAFI,QAAUuE,QAQ/B,uCACA,wBAAOrB,UAAU,gBAAjB,UACI,gCACI,+BACI,sCACA,uCACA,6CAGR,gCACK3D,EAAQ4I,MAAM7D,KAAI,SAACtE,EAAMuE,GACtB,OACI,+BACI,6BAAKvE,EAAKmC,OACV,6BAAKnC,EAAKqI,OACV,6BAAKrI,EAAKuI,WAHL,QAAUhE,cAUvC,8BACI,qBACIG,IAAKD,EACLvB,UAAU,gBACVyB,OAAO,KACPE,IAAKL,EACLM,MAAM,mB,GAxFZtB,IAAMC,YA8GbsB,gBAJS,SAACzF,GACrB,MAAO,CAAE+E,KAAM/E,EAAMiB,aAVE,SAACqB,GACxB,MAAO,CACH8I,iBAAkB,SAAC5I,GACfF,EAAS2I,MACT3I,EDrGgB,SAACE,GACzB,OAAO,SAACF,GAWJ,OAVgB4D,GAAWmF,UAAU7I,GAAawF,MAAK,SAACjD,GACpDzC,EAAS,CACL9C,KAAMN,EACNO,QAAS,CACLmB,QAASmE,EACT/D,OAAQ,gBC8FPsK,CAAa9I,QASnBiD,CAA6CyF,IC3C7CK,I,wDArEX,WAAYrI,GAAQ,IAAD,8BACf,cAAMA,IAEDsI,UAAY,EAAKA,UAAUnI,KAAf,gBACjB,EAAKoI,YAAc,EAAKA,YAAYpI,KAAjB,gBACnB,EAAKkB,oBAAsB,EAAKA,oBAAoBlB,KAAzB,gBALZ,E,sDAQTmB,GACNA,EAAMkH,kBAEN,IAAMzL,EAAUyD,KAAKR,MAAMxC,KAC3BgD,KAAKR,MAAMsI,UAAUvL,K,oCAIrB,IAAMA,EAAUyD,KAAKR,MAAMxC,KAC3BgD,KAAKR,MAAMuI,YAAYxL,K,0CAGPS,EAAM8D,GACtB,IAAMC,EAASD,EAAMC,OACrBA,EAAOC,aACH,MACA,2BAA6BjC,EAAW/B,IAE5C+D,EAAOC,aAAa,MAAOC,K,+BAGrB,IAAD,OACCjE,EAAOgD,KAAKR,MAAMxC,KAClBmC,EAAOJ,EAAW/B,GAClBwE,EAAQxE,EAAKwE,MACbC,EAAW,eAAiBtC,EAElC,OACI,sBACIe,UAAU,OACVI,QAASN,KAAK+H,YACdxH,MAAO,sBAAwBpB,EAHnC,UAKI,oBAAIe,UAAU,YAAd,SAA2Bf,IAE3B,qBACIuC,IAAKD,EACLvB,UAAU,aACVyB,OAAO,KACPC,QAAS,SAACd,GACN,EAAKD,oBAAoB7D,EAAM8D,IAEnCe,IAAKL,EACLM,MAAM,OAGV,sBAAK5B,UAAU,cAAf,UACI,oBAAGA,UAAU,UAAb,cAAyBlB,EAAShC,GAAlC,OACA,wBACIkD,UAAU,WACVI,QAASN,KAAK8H,UACdvH,MAAO,OAASpB,EAAO,kBAH3B,2B,GAzDDqB,IAAMC,YCcVwH,I,6KAfP,OACI,sBAAK/H,UAAU,SAAf,UACI,uBAAOgI,QAAQ,SAAf,oBAAuC,IACvC,uBACIhI,UAAU,eACVzD,GAAG,SACH0L,SAAUnI,KAAKR,MAAM4I,aACrBC,YAAY,2BACZvM,KAAK,kB,GAVJ0E,IAAMC,YCgLZ6H,I,mLA9KP,IAAMjH,EAAOrB,KAAKR,MAAM6B,KAExB,GAAkB,MAAdA,EAAKlE,MACL,MAAO,GAGX,IAAMC,EAAeiE,EAAKjE,aACpBC,EAAOgE,EAAKhE,KACZkL,EAAQlH,EAAKlE,MAAM0F,UAEzB,GAAI0F,GAASnL,EACT,MAAO,GAGX,IAAMoL,EAAQC,KAAKC,KAAKH,EAAQnL,GAE5BD,EAAQ,GAGC,IAATE,GACAF,EAAMiD,KAAK,CACPuI,aAAa,EACbC,YAAY,EACZC,MAAO,WACPxL,KAAM,IAEVF,EAAMiD,KAAK,CACPuI,aAAa,EACbC,YAAY,EACZC,MAAO,IACPxL,KAAM,MAGVF,EAAMiD,KAAK,CACPuI,aAAa,EACbC,YAAY,EACZC,MAAO,WACPxL,KAAMA,EAAO,IAGjBF,EAAMiD,KAAK,CACPuI,aAAa,EACbC,YAAY,EACZC,MAAO,IACPxL,KAAM,IAGNA,EAAO,EAAI,GACXF,EAAMiD,KAAK,CACPuI,aAAa,EACbC,YAAY,EACZC,MAAO,MACPxL,KAAM,QAKlB,IAAIyL,EAAczL,EAAO,EACrByL,GAAe,IACfA,EAAc,GAElB,IAAIC,EAAY1L,EAAO,EACnB0L,GAAaP,IACbO,EAAYP,EAAQ,GAExB,IAAK,IAAIvL,EAAI6L,EAAa7L,GAAK8L,EAAW9L,IAClCA,IAAMI,EACNF,EAAMiD,KAAK,CACPuI,aAAa,EACbC,YAAY,EACZC,MAAO5L,EACPI,KAAMJ,IAGVE,EAAMiD,KAAK,CACPuI,aAAa,EACbC,YAAY,EACZC,MAAO5L,EACPI,KAAMJ,IAiDlB,OA5CII,IAASmL,GACTrL,EAAMiD,KAAK,CACPuI,aAAa,EACbC,YAAY,EACZC,MAAOL,EACPnL,KAAMmL,IAEVrL,EAAMiD,KAAK,CACPuI,aAAa,EACbC,YAAY,EACZC,MAAO,WACPxL,KAAMmL,MAGNnL,EAAO,EAAImL,GACXrL,EAAMiD,KAAK,CACPuI,aAAa,EACbC,YAAY,EACZC,MAAO,MACPxL,KAAM,OAEVF,EAAMiD,KAAK,CACPuI,aAAa,EACbC,YAAY,EACZC,MAAOL,EACPnL,KAAMmL,KAGVrL,EAAMiD,KAAK,CACPuI,aAAa,EACbC,YAAY,EACZC,MAAOL,EACPnL,KAAMmL,IAIdrL,EAAMiD,KAAK,CACPuI,aAAa,EACbC,YAAY,EACZC,MAAO,WACPxL,KAAMA,EAAO,KAIdF,I,+BAGD,IAAD,OACCA,EAAQ6C,KAAKgJ,eAEnB,OACI,qBAAK9I,UAAU,aAAf,SACK/C,EAAMmE,KAAI,SAACtE,EAAMuE,GACd,SAAS0H,EAAaJ,GAClB,MAAO,CAAEK,OAAQL,GAGrB,IAAI3I,EAAY,CAAC,mBAQjB,OAPyB,IAArBlD,EAAK2L,aACLzI,EAAUE,KAAK,gCAEK,IAApBpD,EAAK4L,YACL1I,EAAUE,KAAK,+BAGM,IAArBpD,EAAK2L,YAED,sBACIzI,UAAWA,EAAUG,KAAK,KAC1B8I,wBAAyBF,EACrBjM,EAAK6L,OAETvI,QAAS,kBAAM,EAAKd,MAAM4J,WAAWpM,EAAKK,QACrCkE,GAMb,sBACIrB,UAAWA,EAAUG,KAAK,KAC1B8I,wBAAyBF,EAAajM,EAAK6L,QACtCtH,Y,GAvKRf,IAAMC,YCgBzB4I,I,wDACF,WAAY7J,GAAQ,IAAD,8BACf,cAAMA,IAEDlD,MAAQ,CACTwG,OAAQ,CACJC,MAAO,KAIf,EAAK+E,UAAY,EAAKA,UAAUnI,KAAf,gBACjB,EAAK2J,aAAe,EAAKA,aAAa3J,KAAlB,gBACpB,EAAKyJ,WAAa,EAAKA,WAAWzJ,KAAhB,gBAClB,EAAKiB,kBAAoB,EAAKA,kBAAkBjB,KAAvB,gBAIzB,EAAK4J,cAAgB/I,IAAMgJ,YAhBZ,E,gEAoBf,IAAM/G,EAASzC,KAAKR,MAAMiI,MAAMhF,OAC1BrF,EACqB,MAAvBqF,EAAOrF,aAzBY,GA2BbkJ,OAAO7D,EAAOrF,cAClBC,EAAsB,MAAfoF,EAAOpF,KAAe,EAAIiJ,OAAO7D,EAAOpF,MAErD2C,KAAKR,MAAMiK,kBAAkB,CACzB3G,OAAQ9C,KAAK1D,MAAMwG,OACnB1F,aAAcA,EACdC,KAAMA,M,yCAIKuC,GAOsB,MAAjCI,KAAKR,MAAMkK,SAASC,UACpB/J,EAAU8J,SAASC,WAAa3J,KAAKR,MAAMkK,SAASC,UAEpD3J,KAAKR,MAAMiK,kBAAkB,CACzB3G,OAAQ9C,KAAK1D,MAAMwG,OACnB1F,aAjDe,GAkDfC,KAAM,M,gCAKRd,GACNyD,KAAKR,MAAMoK,oBAAoBrN,K,mCAGtBuE,GACT,IACMiC,EADSjC,EAAMC,OACA8I,MAAMC,OAE3B9J,KAAKC,SAAS,CACV6C,OAAQ,CACJC,MAAOA,KAIf/C,KAAKR,MAAMiK,kBAAkB,CACzB3G,OAAQ,CACJC,MAAOA,GAEX3F,aAzEmB,GA0EnBC,KAAM,M,iCAIHA,GACP,IAAMD,EAAe4C,KAAKR,MAAM6B,KAAK9D,SAASH,aAE9C4C,KAAKR,MAAM2B,QAAQf,KAAnB,oBAAqC/C,EAArC,YAA6CD,EAA7C,MAGA4C,KAAKuJ,cAAcQ,QAAQC,WAAWC,UAAY,EAElDjK,KAAKR,MAAMiK,kBAAkB,CACzB3G,OAAQ9C,KAAK1D,MAAMwG,OACnB1F,aAAcA,EACdC,KAAMA,M,wCAIId,GACd,IAAMuC,EAAcvC,EAAQ4C,KAE5Ba,KAAKR,MAAM2B,QAAQf,KAAnB,mBAAoCtB,EAApC,Q,+BAGM,IAAD,OACCuC,EAAOrB,KAAKR,MAAM6B,KAAK9D,SACvB6D,EAAkBvC,EACpBmB,KAAKR,MAAM6B,KAAKzF,SAASD,SAEvBwB,EAAsB,MAAdkE,EAAKlE,MAAgB,GAAKkE,EAAKlE,MAAMkE,KAE/CnB,EAAY,CAAC,YASjB,MARoB,YAAhBmB,EAAK/D,QACL4C,EAAUE,KAAK,sBAGE,IAAjBjD,EAAMR,QACNuD,EAAUE,KAAK,oBAIf,sBAAKF,UAAWA,EAAUG,KAAK,KAAM6J,IAAKlK,KAAKuJ,cAA/C,UACI,cAAC,EAAD,CAAU5N,QAASyF,IACnB,cAAC,GAAD,CAAQgH,aAAcpI,KAAKsJ,eAC3B,oBAAIpJ,UAAU,2BAAd,SACI,sBAAMA,UAAU,2BAAhB,6CAIJ,oBAAIA,UAAU,2BAAd,gCACA,oBAAIA,UAAU,gBAAd,SACK/C,EAAMmE,KAAI,SAACtE,EAAMuE,GACd,OACI,oBAAIrB,UAAU,gBAAd,SACI,cAAC,GAAD,CACI4H,UAAW,EAAKA,UAChBC,YAAa,EAAKnH,kBAClB5D,KAAMA,KAJqBuE,QAU/C,cAAC,GAAD,CAAYF,KAAMA,EAAM+H,WAAYpJ,KAAKoJ,oB,GAxIlC5I,IAAMC,YA8JdsB,gBAJS,SAACzF,GACrB,MAAO,CAAE+E,KAAM/E,MAbQ,SAACsC,GACxB,MAAO,CACH6K,kBAAmB,SAAChH,GAChB7D,EAAS2I,MACT3I,EL5Ie,SAAC6D,GACxB,OAAO,SAAC7D,GAaJ,OAZgB4D,GAAW2H,IAAI1H,GAAQ6B,MAAK,SAACjD,GACzCzC,EAAS,CACL9C,KAAMP,EACNQ,QAAS,CACLoB,MAAOkE,EACPjE,aAAcqF,EAAOrF,aACrBC,KAAMoF,EAAOpF,KACbC,OAAQ,gBKmIP8M,CAAY3H,KAEzBmH,oBAAqB,SAACrN,GAClBqC,EPrKO,SAACrC,GAChB,OAAO,SAACqC,GACJA,EAAS,CACL9C,KAAMT,EACNU,QAAS,CACLQ,aAIRqC,EAASF,EAAQ,MAAOnC,KO4JX8N,CAAI9N,QASVwF,CAGbE,YAAWoH,KCzKEiB,G,uKARP,OACI,8BACI,iE,GAJW9J,IAAMC,WCFlB,OAA0B,iC,MC+H1B8J,OA3Ff,WACI,OACI,cAAC,IAAD,CAAUrM,MAAOA,EAAjB,SACI,cAAC,IAAD,UACI,sBAAKgC,UAAU,MAAf,UACI,yBAAQA,UAAU,aAAlB,UACI,qBACIwB,IAAI,OACJxB,UAAU,WACVyB,OAAO,KACPE,IAAK2I,GACL1I,MAAM,OAEV,oBAAI5B,UAAU,WAAd,2BAEJ,uBACA,qBAAKA,UAAU,iBAAf,SACI,qBAAIA,UAAU,uBAAd,UACI,oBAAIA,UAAU,sBAAd,SACI,cAAC,IAAD,CACIuK,gBAAgB,kCAChBvK,UAAU,sBACVT,SAAU,SAACgI,EAAOiC,GACd,IAAMC,EAAWD,EAASC,SAE1B,QACiB,MAAbA,IACA,kBAAkBpG,KAAKoG,KACvB,gBAAgBpG,KAAKoG,KAO7Be,GAAG,IAhBP,wBAqBJ,oBAAIxK,UAAU,sBAAd,SACI,cAAC,IAAD,CACIuK,gBAAgB,kCAChBvK,UAAU,sBACVwK,GAAG,gBAHP,gCAUZ,uBACA,sBAAMxK,UAAU,WAAhB,SACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAOyK,UAAWtB,GAAUuB,OAAK,EAACC,KAAK,IAAIC,QAAM,IACjD,cAAC,IAAD,CACIH,UAAWtB,GACXuB,OAAK,EACLC,KAAK,iCACLC,QAAM,IAEV,cAAC,IAAD,CACIH,UAAWnD,GACXoD,OAAK,EACLC,KAAK,kBACLC,QAAM,IAEV,cAAC,IAAD,CAAOF,OAAK,EAACC,KAAK,gBAAgBC,QAAM,EAAxC,SACI,cAAC,EAAD,MAEJ,cAAC,IAAD,CACIH,UAAWnD,GACXoD,OAAK,EACLC,KAAK,sBACLC,QAAM,IAEV,cAAC,IAAD,CAAOD,KAAK,IAAZ,SACI,cAAC,GAAD,WAIZ,uBACA,wBAAQ3K,UAAU,aAAlB,6CCxGL6K,GAdS,SAACC,GACjBA,GAAeA,aAAuBC,UACtC,6BAAqB3G,MACjB,YAAkD,IAA/C4G,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC/BJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCFxBO,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,GAAD,MAEJC,SAASC,eAAe,SAM5BZ,O","file":"static/js/main.c5af6633.chunk.js","sourcesContent":["export const FEEDBACK_ERROR = \"FEEDBACK_ERROR\";\nexport const FEEDBACK_INFO = \"FEEDBACK_INFO\";\nexport const FEEDBACK_SUCCESS = \"FEEDBACK_SUCCESS\";\nexport const FEEDBACK_WARNING = \"FEEDBACK_WARNING\";\n\nexport const MY_POKEMONS_ADD = \"MY_POKEMONS_ADD\";\nexport const MY_POKEMONS_REMOVE = \"MY_POKEMONS_REMOVE\";\n\nexport const POKEMONS_GET = \"POKEMONS_GET\";\nexport const POKEMONS_GET_DETAILS = \"POKEMONS_GET_DETAILS\";\nexport const POKEMONS_LOADING = \"POKEMONS_LOADING\";\n","import {\n    FEEDBACK_ERROR,\n    FEEDBACK_INFO,\n    FEEDBACK_SUCCESS,\n    FEEDBACK_WARNING\n} from \"../actionTypes\";\n\nexport const initialState = {\n    message: null\n};\n\nconst feedback = (state = initialState, action) => {\n    switch (action.type) {\n        case FEEDBACK_ERROR: {\n            return {\n                message: {\n                    payload: action.payload,\n                    type: \"error\"\n                }\n            };\n        }\n        case FEEDBACK_INFO: {\n            return {\n                message: {\n                    payload: action.payload,\n                    type: \"info\"\n                }\n            };\n        }\n        case FEEDBACK_SUCCESS: {\n            return {\n                message: {\n                    payload: action.payload,\n                    type: \"success\"\n                }\n            };\n        }\n        case FEEDBACK_WARNING: {\n            return {\n                message: {\n                    payload: action.payload,\n                    type: \"warning\"\n                }\n            };\n        }\n        default: {\n            return initialState;\n        }\n    }\n};\n\nexport default feedback;\n","import {\n    MY_POKEMONS_ADD,\n    MY_POKEMONS_REMOVE\n} from \"../actionTypes\";\n\nexport const initialState = {\n    myPokemons: [],\n    myPokemonsIndex: {}\n};\n\nconst shallowClone = (object) => {\n    //\n    // Avoid deep clone if it is not necessary\n    // https://www.freecodecamp.org/news/handling-state-in-react-four-immutable-approaches-to-consider-d1f5c00249d5/\n    //\n    return Object.assign({}, object);\n};\n\nconst myPokemons = (state = initialState, action) => {\n    switch (action.type) {\n        case MY_POKEMONS_ADD: {\n            const pokemon = action.payload.pokemon;\n            const pokemonId = pokemon.id;\n\n            // avoid duplicates entries\n            if (state.myPokemonsIndex[pokemonId] == null) {\n                const newState = {\n                    myPokemons: [...state.myPokemons, pokemon],\n                    myPokemonsIndex: shallowClone(state.myPokemonsIndex)\n                };\n                newState.myPokemonsIndex[pokemonId] =\n                    newState.myPokemons.length - 1;\n\n                return newState;\n            }\n\n            const newState = shallowClone(state);\n            newState.actionStatus = {\n                text: \"already_exists\",\n                type: \"info\"\n            };\n\n            return newState;\n        }\n        case MY_POKEMONS_REMOVE: {\n            const pokemon = action.payload.pokemon;\n            const pokemonId = pokemon.id;\n            const index = state.myPokemonsIndex[pokemonId];\n\n            let myPokemons = [...state.myPokemons];\n            myPokemons.splice(index, 1);\n\n            const newState = {\n                myPokemons: myPokemons,\n                myPokemonsIndex: shallowClone(state.myPokemonsIndex)\n            };\n            // set to null instead of delete key\n            newState.myPokemonsIndex[pokemonId] = null;\n\n            // rebuild index: after a remove indeces are changed\n            let item = null;\n            for (\n                let i = 0, length = newState.myPokemons.length;\n                i < length;\n                i++\n            ) {\n                item = newState.myPokemons[i];\n                newState.myPokemonsIndex[item.id] = i;\n            }\n\n            return newState;\n        }\n        default: {\n            return state;\n        }\n    }\n};\n\nexport default myPokemons;\n","import {\n    POKEMONS_GET,\n    POKEMONS_GET_DETAILS,\n    POKEMONS_LOADING\n} from \"../actionTypes\";\n\nexport const initialState = {\n    focusOn: null, // contains detailed info about a pokemon\n    items: null,\n    itemsPerPage: 16,\n    page: 1,\n    status: \"loading\" // or loaded\n};\n\nconst shallowClone = (object) => {\n    //\n    // Avoid deep clone if it is not necessary\n    // https://www.freecodecamp.org/news/handling-state-in-react-four-immutable-approaches-to-consider-d1f5c00249d5/\n    //\n    return Object.assign({}, object);\n};\n\nconst pokemons = (state = initialState, action) => {\n    switch (action.type) {\n        case POKEMONS_LOADING: {\n            const newState = shallowClone(state);\n\n            newState.focusOn = null; // cleanup\n            newState.status = action.payload.status;\n\n            return newState;\n        }\n        case POKEMONS_GET: {\n            const newState = shallowClone(state);\n\n            newState.focusOn = null; // cleanup\n            newState.items = action.payload.items;\n            newState.itemsPerPage = action.payload.itemsPerPage;\n            newState.page = action.payload.page;\n            newState.status = action.payload.status;\n\n            return newState;\n        }\n        case POKEMONS_GET_DETAILS: {\n            const newState = shallowClone(state);\n\n            newState.focusOn = action.payload.focusOn;\n            newState.status = action.payload.status;\n\n            return newState;\n        }\n        default: {\n            return state;\n        }\n    }\n};\n\nexport default pokemons;\n","import { combineReducers } from \"redux\";\nimport feedback from \"./feedback\";\nimport myPokemons from \"./myPokemons\";\nimport pokemons from \"./pokemons\";\n\nexport default combineReducers({ feedback, myPokemons, pokemons });\n","import { applyMiddleware, createStore } from \"redux\";\nimport rootReducer from \"./reducers\";\n\nimport { initialState as myPokemonsInitialState } from \"./reducers/myPokemons\";\nimport { initialState as pokemonsInitialState } from \"./reducers/pokemons\";\n\nimport thunk from \"redux-thunk\";\n\n//\n// save / retrieve My Pokemons from browser local storage\n//\n// adapted from https://github.com/techiediaries/react-jsjargon/blob/master/src/index.js\n//\nconst saveState = (state) => {\n    if (state.myPokemons.myPokemons.length > 0) {\n        localStorage.setItem(\"state\", JSON.stringify(state.myPokemons));\n    }\n};\n\nconst getState = () => {\n    try {\n        const state = localStorage.getItem(\"state\");\n\n        if (state == null) {\n            return null;\n        }\n\n        return JSON.parse(state);\n    } catch (exception) {\n        return null;\n    }\n};\n\nconst savedState = getState();\n\nconst initialState = {\n    myPokemons: savedState == null ? myPokemonsInitialState : savedState,\n    pokemons: pokemonsInitialState\n};\n\nconst store = createStore(rootReducer, initialState, applyMiddleware(thunk));\n\nstore.subscribe(() => {\n    saveState({\n        myPokemons: store.getState().myPokemons\n    });\n});\n\nexport default store;\n","import {\n    FEEDBACK_ERROR,\n    FEEDBACK_INFO,\n    FEEDBACK_SUCCESS,\n    FEEDBACK_WARNING\n} from \"./actionTypes\";\n\nexport const error = (actionPerformed, item) => {\n    return (dispatch) => {\n        dispatch({\n            payload: {\n                actionPerformed,\n                item\n            },\n            type: FEEDBACK_ERROR\n        });\n    };\n};\n\nexport const info = (actionPerformed, item) => {\n    return (dispatch) => {\n        dispatch({\n            payload: {\n                actionPerformed,\n                item\n            },\n            type: FEEDBACK_INFO\n        });\n    };\n};\n\nexport const success = (actionPerformed, item) => {\n    return (dispatch) => {\n        dispatch({\n            payload: {\n                actionPerformed,\n                item\n            },\n            type: FEEDBACK_SUCCESS\n        });\n    };\n};\n\nexport const warning = (actionPerformed, item) => {\n    return (dispatch) => {\n        dispatch({\n            payload: {\n                actionPerformed,\n                item\n            },\n            type: FEEDBACK_WARNING\n        });\n    };\n};\n","export const formatFeedback = (feedback) => {\n    if (feedback == null) {\n        return null;\n    }\n\n    const pokemonName = formatName(feedback.payload.item);\n    let text = null;\n    switch (feedback.payload.actionPerformed) {\n        case \"add\": {\n            text = `${pokemonName} added to My Pokemons.`;\n\n            break;\n        }\n        case \"remove\": {\n            text = `${pokemonName} removed from My Pokemons.`;\n\n            break;\n        }\n        default: {\n            text = \"\";\n        }\n    }\n\n    const message = {\n        text: text,\n        type: feedback.type\n    };\n\n    return message;\n};\n\nexport const formatId = (item) => {\n    const id = String(item.id);\n\n    return id.padStart(5, \"0\");\n};\n\nexport const formatName = (item) => {\n    const name = item.name;\n\n    // It is possible also to use CSS property {text-transform: capitalize;}\n    return name.charAt(0).toUpperCase() + name.slice(1);\n};\n","import React from \"react\";\n\nimport \"./Feedback.css\";\n\nclass Feedback extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            isActive: true\n        };\n\n        this.handleClose = this.handleClose.bind(this);\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const prevMessage =\n            prevProps.message == null ? null : prevProps.message.text;\n        const newMessage =\n            this.props.message == null ? null : this.props.message.text;\n\n        if (newMessage !== prevMessage) {\n            this.setState((state, props) => {\n                return {\n                    isActive: true\n                };\n            });\n        }\n    }\n\n    handleClose() {\n        this.setState((state, props) => {\n            return {\n                isActive: false\n            };\n        });\n    }\n\n    render() {\n        const message = this.props.message;\n\n        if (message == null || this.state.isActive === false) {\n            return <div className=\"Feedback Feedback-is-hidden\"></div>;\n        }\n\n        let classNameText = [\"Feedback-text\"];\n\n        switch (message.type) {\n            case \"error\": {\n                classNameText.push(\"Feedback-text--error\");\n\n                break;\n            }\n            case \"success\": {\n                classNameText.push(\"Feedback-text--success\");\n\n                break;\n            }\n            case \"warning\": {\n                classNameText.push(\"Feedback-text--warning\");\n\n                break;\n            }\n            case \"info\":\n            default: {\n                classNameText.push(\"Feedback-text--info\");\n            }\n        }\n\n        return (\n            <div className=\"Feedback\">\n                <h2 className={classNameText.join(\" \")}>\n                    {message.text}{\" \"}\n                    <button\n                        className=\"Feedback-button-close\"\n                        onClick={this.handleClose}\n                        title=\"Close dialog\"\n                    >\n                        X\n                    </button>\n                </h2>\n            </div>\n        );\n    }\n}\n\nexport default Feedback;\n","export default __webpack_public_path__ + \"static/media/ImageNotAvailable.57c45eb0.png\";","import React from \"react\";\n\nimport { connect } from \"react-redux\";\nimport { remove } from \"./../../redux/actionsMyPokemons\";\n\n// https://stackoverflow.com/questions/44877821/how-to-navigate-on-path-by-button-click-in-react-router-v4\nimport { withRouter } from \"react-router\";\n\nimport { formatFeedback, formatId, formatName } from \"./../../formatter\";\n\nimport Feedback from \"./../../components/Feedback\";\nimport \"./MyPokemons.css\";\nimport notAvailable from \"./../../static/ImageNotAvailable.png\";\n\nclass MyPokemons extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.handleRemove = this.handleRemove.bind(this);\n        this.handleShowDetails = this.handleShowDetails.bind(this);\n        this.handleImageNotFound = this.handleImageNotFound.bind(this);\n    }\n\n    handleImageNotFound(item, event) {\n        const target = event.target;\n        target.setAttribute(\n            \"alt\",\n            \"Image not available for \" + formatName(item)\n        );\n        target.setAttribute(\"src\", notAvailable);\n    }\n\n    handleRemove(pokemon) {\n        this.props.handleMyPokemonsRemove(pokemon);\n    }\n\n    handleShowDetails(pokemon) {\n        const pokemonName = pokemon.name;\n        this.props.history.push(`/my-pokemons/${pokemonName}/`);\n    }\n\n    render() {\n        const feedbackMessage = formatFeedback(\n            this.props.data.feedback.message\n        );\n        const pokemons = this.props.data.myPokemons.myPokemons;\n\n        if (pokemons.length === 0) {\n            return (\n                <div className=\"MyPokemons\">\n                    <Feedback message={feedbackMessage} />\n                    <h2>No Pokemons in your list.</h2>\n                </div>\n            );\n        }\n\n        return (\n            <div className=\"MyPokemons\">\n                <Feedback message={feedbackMessage} />\n                <table>\n                    <thead>\n                        <tr>\n                            <th></th>\n                            <th>Name</th>\n                            <th>ID</th>\n                            <th></th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {pokemons.map((item, idx) => {\n                            const id = formatId(item);\n                            const name = formatName(item);\n                            const image = item.image;\n                            const imageAlt = \"An image of \" + name;\n\n                            return (\n                                <tr key={\"my-pokemon\" + idx}>\n                                    <td>\n                                        <img\n                                            alt={imageAlt}\n                                            height=\"48\"\n                                            onError={(event) => {\n                                                this.handleImageNotFound(\n                                                    item,\n                                                    event\n                                                );\n                                            }}\n                                            src={image}\n                                            width=\"48\"\n                                        />\n                                    </td>\n                                    <td>{name}</td>\n                                    <td>{id}</td>\n                                    <td>\n                                        <button\n                                            className=\"MyPokemons-button MyPokemons-remove\"\n                                            onClick={() => {\n                                                this.handleRemove(item);\n                                            }}\n                                        >\n                                            Remove\n                                        </button>\n                                        <button\n                                            className=\"MyPokemons-button MyPokemons-show\"\n                                            onClick={() => {\n                                                this.handleShowDetails(item);\n                                            }}\n                                        >\n                                            Show\n                                        </button>\n                                    </td>\n                                </tr>\n                            );\n                        })}\n                    </tbody>\n                </table>\n            </div>\n        );\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        handleMyPokemonsRemove: (pokemon) => {\n            dispatch(remove(pokemon));\n        }\n    };\n};\n\nconst mapStateToProps = (state) => {\n    return { data: state };\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withRouter(MyPokemons));\n","import { MY_POKEMONS_ADD, MY_POKEMONS_REMOVE } from \"./actionTypes\";\n\nimport { success } from \"./actionsFeedback\";\n\nexport const add = (pokemon) => {\n    return (dispatch) => {\n        dispatch({\n            type: MY_POKEMONS_ADD,\n            payload: {\n                pokemon\n            }\n        });\n\n        dispatch(success(\"add\", pokemon));\n    };\n};\n\nexport const remove = (pokemon) => {\n    return (dispatch) => {\n        dispatch({\n            type: MY_POKEMONS_REMOVE,\n            payload: {\n                pokemon\n            }\n        });\n\n        dispatch(success(\"remove\", pokemon));\n    };\n};\n","/**\n * Pokemon API <https://pokeapi.co/>\n *\n * Author: Elia Contini <https://elia.contini.page/>\n *\n * Dev notes about fetch()\n * https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/fetch\n */\nconst API_BASE_URL = \"https://pokeapi.co/\";\nconst API_END_POINTS = {\n    get: API_BASE_URL + \"api/v2/pokemon/\",\n    media:\n        \"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/\" // front_default\n};\nconst API_FETCH_INITS = {\n    GET: {\n        mode: \"cors\",\n        headers: {\n            \"Content-Type\": \"application/json\"\n        },\n        body: null\n    },\n    POST: null\n    // ... other HTTP verbs\n};\nconst LANGUAGE = \"en\";\n\nclass Pokemon {\n    /**\n     * Get Pokemons according to params\n     *\n     * @param {object} params\n     * @param {object} params.filter - search string\n     * @param {string} params.filter.input - search string\n     * @param {number} params.itemsPerPage\n     * @param {number} params.page\n     *\n     * @returns {Promise} - a promise fulfilled with requested data\n     */\n    async get(params) {\n        let cache = this.cache;\n        if (cache == null) {\n            cache = await this.init();\n        }\n\n        if (params == null) {\n            return this._getPage(cache.data, cache.dataCount, {\n                itemsPerPage: 16,\n                page: 1\n            });\n        }\n\n        if (params.filter == null || params.filter.input === \"\") {\n            return this._getPage(cache.data, cache.dataCount, params);\n        }\n\n        if (\n            cache.filterParams != null &&\n            params.filter.input === cache.filterParams.input\n        ) {\n            return this._getPage(cache.filtered, cache.filteredCount, params);\n        }\n\n        let index = cache.dataIndexes.byName;\n        let sortBy = \"name\";\n        if (/^[0-9]+$/gi.test(params.filter.input)) {\n            index = cache.dataIndexes.byId;\n            sortBy = \"id\";\n        }\n\n        const items = cache.data;\n        let results = [];\n        for (let key in index) {\n            let regex = new RegExp(\"^\" + params.filter.input, \"gi\");\n            if (regex.test(key) === true) {\n                results.push(items[index[key]]);\n            }\n        }\n\n        results.sort((objectA, objectB) => {\n            return this._sortObjectsBy(objectA, objectB, sortBy, false);\n        });\n\n        cache.filterParams = params;\n        cache.filtered = results;\n        cache.filteredCount = results.length;\n\n        const result = this._getPage(\n            cache.filtered,\n            cache.filteredCount,\n            params\n        );\n\n        return result;\n    }\n\n    /**\n     * Get pokemon abilities\n     *\n     * @param {object} pokemon\n     *\n     * @returns {Promise} - a promise fulfilled with requested data\n     */\n    async getAbilities(pokemon) {\n        let init = Object.assign({}, API_FETCH_INITS.GET);\n\n        let requestDetails = [];\n        pokemon.abilities.forEach((item) => {\n            requestDetails.push(\n                fetch(item.ability.url, init).then((ability) => {\n                    return ability.json();\n                })\n            );\n        });\n\n        return Promise.all(requestDetails).then((items) => {\n            let result = [];\n\n            items.forEach((item) => {\n                result.push(item.names.filter(this._getLang)[0].name);\n            });\n\n            return result.sort();\n        });\n    }\n\n    /**\n     * Get details about a Pokemon retrieving data by ID\n     *\n     * @param {number} pokemonId\n     *\n     * @returns {Promise} - a promise fulfilled with requested data\n     */\n    async getById(pokemonId) {\n        return this._getBy(pokemonId);\n    }\n\n    /**\n     * Get details about a Pokemon retrieving data by name\n     *\n     * @param {string} pokemonName\n     *\n     * @returns {Promise} - a promise fulfilled with requested data\n     */\n    async getByName(pokemonName) {\n        return this._getBy(pokemonName);\n    }\n\n    /**\n     * Get pokemon moves\n     *\n     * @param {object} pokemon\n     *\n     * @returns {Promise} - a promise fulfilled with requested data\n     */\n    async getMoves(pokemon) {\n        let init = Object.assign({}, API_FETCH_INITS.GET);\n\n        let requestDetails = [];\n        pokemon.moves.forEach((item) => {\n            requestDetails.push(\n                fetch(item.move.url, init)\n                    .then((move) => {\n                        return move.json();\n                    })\n                    .catch((error) => {\n                        console.error(\n                            \"There has been a problem with your fetch operation:\",\n                            error\n                        );\n\n                        const unavailable = {\n                            names: [\n                                {\n                                    language: {\n                                        name: LANGUAGE\n                                    },\n                                    name:\n                                        item.move.name +\n                                        \" (unavailable details)\"\n                                }\n                            ]\n                        };\n\n                        return unavailable;\n                    })\n            );\n        });\n\n        return Promise.all(requestDetails).then((items) => {\n            let result = [];\n\n            items.forEach((item) => {\n                result.push(item.names.filter(this._getLang)[0].name);\n            });\n\n            return result.sort();\n        });\n    }\n\n    /**\n     * Get pokemon stats\n     *\n     * @param {object} pokemon\n     *\n     * @returns {Promise} - a promise fulfilled with requested data\n     */\n    async getStats(pokemon) {\n        let init = Object.assign({}, API_FETCH_INITS.GET);\n\n        let requestDetails = [];\n        pokemon.stats.forEach((item) => {\n            requestDetails.push(\n                fetch(item.stat.url, init).then((stat) => {\n                    return stat.json();\n                })\n            );\n        });\n\n        return Promise.all(requestDetails).then((items) => {\n            let result = [];\n\n            items.forEach((item, index) => {\n                result.push({\n                    base: pokemon.stats[index].base_stat,\n                    effort: pokemon.stats[index].effort,\n                    name: item.names.filter(this._getLang)[0].name\n                });\n            });\n\n            return result.sort((a, b) => {\n                if (a.name > b.name) {\n                    return 1;\n                }\n\n                if (a.name < b.name) {\n                    return -1;\n                }\n\n                return 0;\n            });\n        });\n    }\n\n    /**\n     * Manages bootstrapping\n     *\n     * In order to avoid to requests all details about every single Pokemon just\n     * to have ID info, a regex is used to extract ID from resource url property\n     *\n     * 1 - it requests only 1 item in order to receive the count\n     * 2 - it requests all Pokemons\n     * 3 - it creates the cache\n     */\n    async init() {\n        let init = Object.assign({}, API_FETCH_INITS.GET);\n        let uri = API_END_POINTS.get + \"?limit=1&offset=0\";\n\n        const limitInfo = await fetch(uri, init);\n        const limitInfoData = await limitInfo.json();\n\n        const limit = limitInfoData.count;\n        uri = API_END_POINTS.get + `?limit=${limit}&offset=0`;\n\n        const allPokemons = await fetch(uri, init);\n        const allPokemonsData = await allPokemons.json();\n        const pokemonsList = allPokemonsData.results;\n\n        this.cache = {\n            data: [],\n            dataCount: limit,\n            dataIndexes: {\n                byId: {},\n                byName: {}\n            },\n            // populated calling getById or getByName\n            details: [],\n            detailsCount: 0,\n            detailsIndexes: {\n                byId: {},\n                byName: {}\n            },\n            // populated applying filters\n            filterParams: null,\n            filtered: [],\n            filteredCount: 0\n        };\n\n        pokemonsList.forEach((item, index) => {\n            const pattern = new RegExp(API_END_POINTS.get + \"(\\\\d+)/\", \"gi\");\n\n            const pokemonId = Number(pattern.exec(item.url)[1]);\n            const pokemonImage = API_END_POINTS.media + `${pokemonId}.png`;\n\n            this.cache.data.push({\n                id: pokemonId,\n                image: pokemonImage,\n                name: item.name\n            });\n\n            this.cache.dataIndexes.byId[pokemonId] = index;\n            this.cache.dataIndexes.byName[item.name] = index;\n        });\n\n        return this.cache;\n    }\n    // --------------------------------------------------------- private methods\n    //\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Classes/Private_class_fields\n    //\n    // async #getBy(pokemonIdOrName) { ... }\n    // Still not supported on Firefox (under experimental features)\n    //\n    async _getBy(pokemonIdOrName) {\n        let cache = this.cache;\n        if (cache == null) {\n            cache = await this.init();\n        }\n\n        if (/^[0-9]+$/gi.test(pokemonIdOrName)) {\n            if (pokemonIdOrName in cache.detailsIndexes.byId) {\n                return cache.details[\n                    cache.detailsIndexes.byId[pokemonIdOrName]\n                ];\n            }\n        } else {\n            if (pokemonIdOrName in cache.detailsIndexes.byName) {\n                return cache.details[\n                    cache.detailsIndexes.byName[pokemonIdOrName]\n                ];\n            }\n        }\n\n        let init = Object.assign({}, API_FETCH_INITS.GET);\n        const uri = API_END_POINTS.get + `${pokemonIdOrName}/`;\n\n        const pokemonRequest = await fetch(uri, init);\n        const pokemon = await pokemonRequest.json();\n\n        let requestDetails = [\n            this.getAbilities(pokemon),\n            this.getMoves(pokemon),\n            this.getStats(pokemon)\n        ];\n        const pokemonDetails = await Promise.all(requestDetails);\n\n        const result = {\n            abilities: pokemonDetails[0],\n            id: pokemon.id,\n            image: pokemon.sprites.front_default,\n            moves: pokemonDetails[1],\n            name: pokemon.name,\n            stats: pokemonDetails[2]\n        };\n\n        // caching result\n        this.cache.details.push(result);\n        const index = this.cache.details.length - 1;\n        this.cache.detailsIndexes.byId[pokemon.id] = index;\n        this.cache.detailsIndexes.byName[pokemon.name] = index;\n\n        return result;\n    }\n\n    // #getLang(pokemonIdOrName) { ... }\n    _getLang(item) {\n        if (item.language.name === LANGUAGE) {\n            return true;\n        }\n\n        return false;\n    }\n\n    // #getPagination(params) { ... }\n    _getPage(data, dataCount, params) {\n        let end = 16;\n        let start = 0;\n        if (params != null) {\n            end = params.itemsPerPage * params.page;\n            start = (params.page - 1) * params.itemsPerPage;\n        }\n\n        const result = {\n            data: data.slice(start, end),\n            dataCount: dataCount\n        };\n\n        return result;\n    }\n\n    // #sortObjectsBy(itemA, itemB, property, isDescending) { ... }\n    _sortObjectsBy(objectA, objectB, property, isDescending) {\n        isDescending = isDescending == null ? false : isDescending;\n\n        const valueA = objectA[property];\n        const valueB = objectB[property];\n\n        if (valueA > valueB) {\n            return isDescending === true ? -1 : 1;\n        }\n\n        if (valueA < valueB) {\n            return isDescending === true ? 1 : -1;\n        }\n\n        return 0;\n    }\n}\n\nexport default Pokemon;\n","import {\n    POKEMONS_GET,\n    POKEMONS_GET_DETAILS,\n    POKEMONS_LOADING\n} from \"./actionTypes\";\n\nimport PokemonApi from \"./../api/Pokemon\";\n\nconst pokemonApi = new PokemonApi();\n\nexport const fetchPokemon = (pokemonName) => {\n    return (dispatch) => {\n        const request = pokemonApi.getByName(pokemonName).then((data) => {\n            dispatch({\n                type: POKEMONS_GET_DETAILS,\n                payload: {\n                    focusOn: data,\n                    status: \"loaded\"\n                }\n            });\n        });\n\n        return request;\n    };\n};\n\nexport const getPokemons = (params) => {\n    return (dispatch) => {\n        const request = pokemonApi.get(params).then((data) => {\n            dispatch({\n                type: POKEMONS_GET,\n                payload: {\n                    items: data,\n                    itemsPerPage: params.itemsPerPage,\n                    page: params.page,\n                    status: \"loaded\"\n                }\n            });\n        });\n\n        return request;\n    };\n};\n\nexport const loading = () => {\n    return (dispatch) => {\n        dispatch({\n            type: POKEMONS_LOADING,\n            payload: {\n                status: \"loading\"\n            }\n        });\n    };\n};\n","import React from \"react\";\n\nimport { connect } from \"react-redux\";\nimport { fetchPokemon, loading } from \"./../../redux/actionsPokemons\";\n\nimport { formatId, formatName } from \"./../../formatter\";\n\nimport \"./Pokemon.css\";\nimport notAvailable from \"./../../static/ImageNotAvailable.png\";\n\nclass Pokemon extends React.Component {\n    componentDidMount() {\n        const pokemonName = this.props.match.params.name;\n        this.props.handleGetPokemon(pokemonName);\n    }\n\n    render() {\n        const data = this.props.data;\n\n        if (data.status === \"loading\" || data.focusOn == null) {\n            return (\n                <div className=\"Pokemon\">\n                    <h2>Pokemon data are loading ...</h2>\n                </div>\n            );\n        }\n\n        const pokemon = data.focusOn;\n        const name = formatName(pokemon);\n        let image = notAvailable;\n        let imageAlt = \"Image not available for \" + name;\n        if (pokemon.image != null) {\n            image = pokemon.image;\n            imageAlt = \"An image of \" + name;\n        }\n\n        return (\n            <div className=\"Pokemon\">\n                <h2 className=\"Pokemon-name\">{name}</h2>\n                <p className=\"Pokemon-id\">ID: {formatId(pokemon)}</p>\n                <div className=\"Pokemon-details\">\n                    <div className=\"Pokemon-info\">\n                        <h3>Abilities</h3>\n                        <ul className=\"Pokemon-abilities\">\n                            {pokemon.abilities.map((item, idx) => {\n                                return (\n                                    <li\n                                        className=\"Pokemon-ability\"\n                                        key={\"ability-\" + idx}\n                                    >\n                                        {item}\n                                    </li>\n                                );\n                            })}\n                        </ul>\n\n                        <h3>Moves</h3>\n                        <ul className=\"Pokemon-moves\">\n                            {pokemon.moves.map((item, idx) => {\n                                return (\n                                    <li\n                                        className=\"Pokemon-move\"\n                                        key={\"move-\" + idx}\n                                    >\n                                        {item}\n                                    </li>\n                                );\n                            })}\n                        </ul>\n\n                        <h3>Stats</h3>\n                        <table className=\"Pokemon-stats\">\n                            <thead>\n                                <tr>\n                                    <th>Name</th>\n                                    <th>Value</th>\n                                    <th>Effort</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {pokemon.stats.map((item, idx) => {\n                                    return (\n                                        <tr key={\"stat-\" + idx}>\n                                            <td>{item.name}</td>\n                                            <td>{item.base}</td>\n                                            <td>{item.effort}</td>\n                                        </tr>\n                                    );\n                                })}\n                            </tbody>\n                        </table>\n                    </div>\n                    <div>\n                        <img\n                            alt={imageAlt}\n                            className=\"Pokemon-image\"\n                            height=\"96\"\n                            src={image}\n                            width=\"96\"\n                        />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        handleGetPokemon: (pokemonName) => {\n            dispatch(loading());\n            dispatch(fetchPokemon(pokemonName));\n        }\n    };\n};\n\nconst mapStateToProps = (state) => {\n    return { data: state.pokemons };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Pokemon);\n","import React from \"react\";\n\nimport { formatId, formatName } from \"./../../formatter\";\n\nimport \"./Card.css\";\nimport notAvailable from \"./../../static/ImageNotAvailable.png\";\n\nclass Card extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.handleAdd = this.handleAdd.bind(this);\n        this.handleClick = this.handleClick.bind(this);\n        this.handleImageNotFound = this.handleImageNotFound.bind(this);\n    }\n\n    handleAdd(event) {\n        event.stopPropagation();\n\n        const pokemon = this.props.item;\n        this.props.handleAdd(pokemon);\n    }\n\n    handleClick() {\n        const pokemon = this.props.item;\n        this.props.handleClick(pokemon);\n    }\n\n    handleImageNotFound(item, event) {\n        const target = event.target;\n        target.setAttribute(\n            \"alt\",\n            \"Image not available for \" + formatName(item)\n        );\n        target.setAttribute(\"src\", notAvailable);\n    }\n\n    render() {\n        const item = this.props.item;\n        const name = formatName(item);\n        const image = item.image;\n        const imageAlt = \"An image of \" + name;\n\n        return (\n            <div\n                className=\"Card\"\n                onClick={this.handleClick}\n                title={\"Show details about \" + name}\n            >\n                <h2 className=\"Card-name\">{name}</h2>\n\n                <img\n                    alt={imageAlt}\n                    className=\"Card-image\"\n                    height=\"96\"\n                    onError={(event) => {\n                        this.handleImageNotFound(item, event);\n                    }}\n                    src={image}\n                    width=\"96\"\n                />\n\n                <div className=\"Card-footer\">\n                    <p className=\"Card-id\">#{formatId(item)} </p>\n                    <button\n                        className=\"Card-add\"\n                        onClick={this.handleAdd}\n                        title={\"Add \" + name + \" to My Pokemons\"}\n                    >\n                        Add\n                    </button>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Card;\n","import React from \"react\";\n\nimport \"./Filter.css\";\n\nclass Filter extends React.Component {\n    render() {\n        return (\n            <div className=\"Filter\">\n                <label htmlFor=\"search\">Search</label>{\" \"}\n                <input\n                    className=\"Filter-input\"\n                    id=\"search\"\n                    onChange={this.props.handleSearch}\n                    placeholder=\"Search by name or number\"\n                    type=\"search\"\n                />\n            </div>\n        );\n    }\n}\n\nexport default Filter;\n","import React from \"react\";\n\nimport \"./Pagination.css\";\n\nclass Pagination extends React.Component {\n    prepareItems() {\n        const data = this.props.data;\n\n        if (data.items == null) {\n            return [];\n        }\n\n        const itemsPerPage = data.itemsPerPage;\n        const page = data.page;\n        const total = data.items.dataCount;\n\n        if (total <= itemsPerPage) {\n            return [];\n        }\n\n        const pages = Math.ceil(total / itemsPerPage);\n\n        let items = [];\n\n        // head\n        if (page === 1) {\n            items.push({\n                isClickable: false,\n                isSelected: false,\n                label: \"&lsaquo;\",\n                page: 1\n            });\n            items.push({\n                isClickable: false,\n                isSelected: true,\n                label: \"1\",\n                page: 1\n            });\n        } else {\n            items.push({\n                isClickable: true,\n                isSelected: false,\n                label: \"&lsaquo;\",\n                page: page - 1\n            });\n\n            items.push({\n                isClickable: true,\n                isSelected: false,\n                label: \"1\",\n                page: 1\n            });\n\n            if (page - 2 > 1) {\n                items.push({\n                    isClickable: false,\n                    isSelected: false,\n                    label: \"...\",\n                    page: null\n                });\n            }\n        }\n        // middle\n        var offsetStart = page - 2;\n        if (offsetStart <= 1) {\n            offsetStart = 2;\n        }\n        var offsetEnd = page + 2;\n        if (offsetEnd >= pages) {\n            offsetEnd = pages - 1;\n        }\n        for (var i = offsetStart; i <= offsetEnd; i++) {\n            if (i === page) {\n                items.push({\n                    isClickable: false,\n                    isSelected: true,\n                    label: i,\n                    page: i\n                });\n            } else {\n                items.push({\n                    isClickable: true,\n                    isSelected: false,\n                    label: i,\n                    page: i\n                });\n            }\n        }\n        // tail\n        if (page === pages) {\n            items.push({\n                isClickable: false,\n                isSelected: true,\n                label: pages,\n                page: pages\n            });\n            items.push({\n                isClickable: false,\n                isSelected: false,\n                label: \"&rsaquo;\",\n                page: pages\n            });\n        } else {\n            if (page + 2 < pages) {\n                items.push({\n                    isClickable: false,\n                    isSelected: false,\n                    label: \"...\",\n                    page: null\n                });\n                items.push({\n                    isClickable: true,\n                    isSelected: false,\n                    label: pages,\n                    page: pages\n                });\n            } else {\n                items.push({\n                    isClickable: true,\n                    isSelected: false,\n                    label: pages,\n                    page: pages\n                });\n            }\n\n            items.push({\n                isClickable: true,\n                isSelected: false,\n                label: \"&rsaquo;\",\n                page: page + 1\n            });\n        }\n\n        return items;\n    }\n\n    render() {\n        const items = this.prepareItems();\n\n        return (\n            <div className=\"Pagination\">\n                {items.map((item, idx) => {\n                    function createMarkup(label) {\n                        return { __html: label };\n                    }\n\n                    let className = [\"Pagination-item\"];\n                    if (item.isClickable === true) {\n                        className.push(\"Pagination-item-isClickable\");\n                    }\n                    if (item.isSelected === true) {\n                        className.push(\"Pagination-item-isSelected\");\n                    }\n\n                    if (item.isClickable === true) {\n                        return (\n                            <span\n                                className={className.join(\" \")}\n                                dangerouslySetInnerHTML={createMarkup(\n                                    item.label\n                                )}\n                                onClick={() => this.props.handleGoTo(item.page)}\n                                key={idx}\n                            ></span>\n                        );\n                    }\n\n                    return (\n                        <span\n                            className={className.join(\" \")}\n                            dangerouslySetInnerHTML={createMarkup(item.label)}\n                            key={idx}\n                        ></span>\n                    );\n                })}\n            </div>\n        );\n    }\n}\n\nexport default Pagination;\n","import React from \"react\";\n\nimport { connect } from \"react-redux\";\nimport { add } from \"./../../redux/actionsMyPokemons\";\nimport { getPokemons, loading } from \"./../../redux/actionsPokemons\";\n\n// https://stackoverflow.com/questions/44877821/how-to-navigate-on-path-by-button-click-in-react-router-v4\nimport { withRouter } from \"react-router\";\n\nimport { formatFeedback } from \"./../../formatter\";\n\nimport Card from \"./../../components/Card\";\nimport Feedback from \"./../../components/Feedback\";\nimport Filter from \"./../../components/Filter\";\nimport Pagination from \"./../../components/Pagination\";\n\nimport \"./Pokemons.css\";\n\nconst DEFAULT_ITEMS_PER_PAGE = 16;\n\nclass Pokemons extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            filter: {\n                input: \"\"\n            }\n        };\n\n        this.handleAdd = this.handleAdd.bind(this);\n        this.handleFilter = this.handleFilter.bind(this);\n        this.handleGoTo = this.handleGoTo.bind(this);\n        this.handleShowDetails = this.handleShowDetails.bind(this);\n\n        // used to reset scroll\n        // https://reactjs.org/docs/refs-and-the-dom.html#creating-refs\n        this.componentNode = React.createRef();\n    }\n\n    componentDidMount() {\n        const params = this.props.match.params;\n        const itemsPerPage =\n            params.itemsPerPage == null\n                ? DEFAULT_ITEMS_PER_PAGE\n                : Number(params.itemsPerPage);\n        const page = params.page == null ? 1 : Number(params.page);\n\n        this.props.handleGetPokemons({\n            filter: this.state.filter,\n            itemsPerPage: itemsPerPage,\n            page: page\n        });\n    }\n\n    componentDidUpdate(prevProps) {\n        //\n        // User story: if the user is on a page different from 1 and clicks the\n        // navigation tab \"Pokemons\", the route change is not enough to trigger\n        // the state change (it needs to request 1st page data)\n        //\n        if (\n            this.props.location.pathname === \"/\" &&\n            prevProps.location.pathname !== this.props.location.pathname\n        ) {\n            this.props.handleGetPokemons({\n                filter: this.state.filter,\n                itemsPerPage: DEFAULT_ITEMS_PER_PAGE,\n                page: 1\n            });\n        }\n    }\n\n    handleAdd(pokemon) {\n        this.props.handleMyPokemonsAdd(pokemon);\n    }\n\n    handleFilter(event) {\n        const target = event.target;\n        const input = target.value.trim();\n\n        this.setState({\n            filter: {\n                input: input\n            }\n        });\n\n        this.props.handleGetPokemons({\n            filter: {\n                input: input\n            },\n            itemsPerPage: DEFAULT_ITEMS_PER_PAGE,\n            page: 1\n        });\n    }\n\n    handleGoTo(page) {\n        const itemsPerPage = this.props.data.pokemons.itemsPerPage;\n\n        this.props.history.push(`/pokemons/${page}/${itemsPerPage}/`);\n\n        // reset scroll\n        this.componentNode.current.parentNode.scrollTop = 0;\n\n        this.props.handleGetPokemons({\n            filter: this.state.filter,\n            itemsPerPage: itemsPerPage,\n            page: page\n        });\n    }\n\n    handleShowDetails(pokemon) {\n        const pokemonName = pokemon.name;\n\n        this.props.history.push(`/pokemon/${pokemonName}/`);\n    }\n\n    render() {\n        const data = this.props.data.pokemons;\n        const feedbackMessage = formatFeedback(\n            this.props.data.feedback.message\n        );\n        const items = data.items == null ? [] : data.items.data;\n\n        let className = [\"Pokemons\"];\n        if (data.status === \"loading\") {\n            className.push(\"Pokemons-isLoading\");\n        }\n\n        if (items.length === 0) {\n            className.push(\"Pokemons-no-data\");\n        }\n\n        return (\n            <div className={className.join(\" \")} ref={this.componentNode}>\n                <Feedback message={feedbackMessage} />\n                <Filter handleSearch={this.handleFilter} />\n                <h2 className=\"Pokemons-loading-wrapper\">\n                    <span className=\"Pokemons-loading-message\">\n                        Pokemons data are loading ...\n                    </span>\n                </h2>\n                <h2 className=\"Pokemons-no-data-message\">No pokemons found.</h2>\n                <ul className=\"Pokemons-list\">\n                    {items.map((item, idx) => {\n                        return (\n                            <li className=\"Pokemons-item\" key={idx}>\n                                <Card\n                                    handleAdd={this.handleAdd}\n                                    handleClick={this.handleShowDetails}\n                                    item={item}\n                                />\n                            </li>\n                        );\n                    })}\n                </ul>\n                <Pagination data={data} handleGoTo={this.handleGoTo} />\n            </div>\n        );\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        handleGetPokemons: (params) => {\n            dispatch(loading());\n            dispatch(getPokemons(params));\n        },\n        handleMyPokemonsAdd: (pokemon) => {\n            dispatch(add(pokemon));\n        }\n    };\n};\n\nconst mapStateToProps = (state) => {\n    return { data: state };\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withRouter(Pokemons));\n","import React from \"react\";\n\nclass PageNotFound extends React.Component {\n    render() {\n        return (\n            <div>\n                <h2>Error 404: Page not found</h2>\n            </div>\n        );\n    }\n}\n\nexport default PageNotFound;\n","export default __webpack_public_path__ + \"static/media/logo.f7ca03eb.svg\";","import React from \"react\";\n\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\n\nimport {\n    // BrowserRouter as Router,\n    //\n    // It does not work on GitHub pages. To use it, it needs to be able to\n    // configure web server\n    //\n    // For NGINX\n    // server {\n    //     # ...\n    //\n    //     location / {\n    //         try_files $uri $uri/ =404;\n    //     }\n    //\n    //     # ...\n    // }\n    //\n    HashRouter as Router,\n    NavLink,\n    Route,\n    Switch\n} from \"react-router-dom\";\n\nimport MyPokemons from \"./pages/MyPokemons\";\nimport Pokemon from \"./pages/Pokemon\";\nimport Pokemons from \"./pages/Pokemons\";\nimport PageNotFound from \"./pages/PageNotFound\";\n\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\n\nfunction App() {\n    return (\n        <Provider store={store}>\n            <Router>\n                <div className=\"App\">\n                    <header className=\"App-header\">\n                        <img\n                            alt=\"Logo\"\n                            className=\"App-logo\"\n                            height=\"48\"\n                            src={logo}\n                            width=\"48\"\n                        />\n                        <h1 className=\"App-name\">Pok&eacute;dex</h1>\n                    </header>\n                    <hr />\n                    <nav className=\"App-navigation\">\n                        <ul className=\"App-navigation-items\">\n                            <li className=\"App-navigation-item\">\n                                <NavLink\n                                    activeClassName=\"App-navigation-link-is-selected\"\n                                    className=\"App-navigation-link\"\n                                    isActive={(match, location) => {\n                                        const pathname = location.pathname;\n\n                                        if (\n                                            pathname === \"/\" ||\n                                            /^\\/\\d+\\/\\d+\\//gi.test(pathname) ||\n                                            /^\\/[a-z]+\\//gi.test(pathname)\n                                        ) {\n                                            return true;\n                                        }\n\n                                        return false;\n                                    }}\n                                    to=\"/\"\n                                >\n                                    Pokemons\n                                </NavLink>\n                            </li>\n                            <li className=\"App-navigation-item\">\n                                <NavLink\n                                    activeClassName=\"App-navigation-link-is-selected\"\n                                    className=\"App-navigation-link\"\n                                    to=\"/my-pokemons/\"\n                                >\n                                    My Pokemons\n                                </NavLink>\n                            </li>\n                        </ul>\n                    </nav>\n                    <hr />\n                    <main className=\"App-main\">\n                        <Switch>\n                            <Route component={Pokemons} exact path=\"/\" strict />\n                            <Route\n                                component={Pokemons}\n                                exact\n                                path=\"/pokemons/:page/:itemsPerPage/\"\n                                strict\n                            />\n                            <Route\n                                component={Pokemon}\n                                exact\n                                path=\"/pokemon/:name/\"\n                                strict\n                            />\n                            <Route exact path=\"/my-pokemons/\" strict>\n                                <MyPokemons />\n                            </Route>\n                            <Route\n                                component={Pokemon}\n                                exact\n                                path=\"/my-pokemons/:name/\"\n                                strict\n                            />\n                            <Route path=\"*\">\n                                <PageNotFound />\n                            </Route>\n                        </Switch>\n                    </main>\n                    <hr />\n                    <footer className=\"App-footer\">\n                        &copy; 2020 Elia Contini.\n                    </footer>\n                </div>\n            </Router>\n        </Provider>\n    );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import(\"web-vitals\").then(\n            ({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n                getCLS(onPerfEntry);\n                getFID(onPerfEntry);\n                getFCP(onPerfEntry);\n                getLCP(onPerfEntry);\n                getTTFB(onPerfEntry);\n            }\n        );\n    }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}